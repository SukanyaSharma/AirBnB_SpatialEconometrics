names(data)
Y <- cbind(rent_burdened)
X <- cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_unempl, percent_non_white,
percent_foreign_born, log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
print(mat)
library(car)
#Scatter Plot Matrix
spm(X)
X_old <- cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_unempl, percent_non_white,
percent_foreign_born, log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
print(mat)
# Redefining X after looking at scatterplot
X = cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_non_white,
log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
spm(X)
# Regression
reg1 <- lm(rent_burdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy
+ percent_non_white + log_MHI +  percent_airbnb_all_rentals
+ School_district_quality)
summary(reg1)
stargazer(summary(reg1))
library(stargazer)
stargazer(summary(reg1))
stargazer(reg1)
# Variance inflation factor: checking for multicollinearity
vif(reg1)
stargazer(vif(reg1))
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
library(maptools)
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/ALL_TRACTS_ALL_DATA.shp')
View(shpfile)
View(shpfile)
View(shpfile)
lat <- matrix(shpfile$INTPTLAT)
lat <- matrix(mapply(lat, FUN = as.numeric)
lat <- matrix(mapply(lat, FUN = as.numeric))
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
View(long)
View(long)
coords <- cbind(long, lat)
View(coords)
neighbors <- poly2nb(shpfile)
View(neighbors)
summary(neighbors)
neighbors[[177]] = NULL # removing island with no links from list of neighbors
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
plot(neighbors, coords)
coords[[177]] = NULL
coords[177] = NULL
View(coords)
coords[177]
coords[177,]
coords[177,] = NULL,NULL
coords[177,] = (NULL,NULL)
coords[177,] = NULL
coords[177,1]
coords[177,2]
coords[177,2] = NULL
# OLS regression
olsreg <- lm(Y ~ X)
stargazer(olsreg)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
View(listw)
# Moran's I test
moran.test(Y, listw)
moran.plot(Y, listw)
# Moran's I test
moran.test(rent_burdened, listw)
moran.plot(Y, listw)
moran.plot(rent_burdened, listw)
View(listw)
length(rent_burdened)
help("moran.test")
View(Y)
View(Y)
moran.plot(rent_burdened, listw, zero.policy = T)
# Moran's I test
moran.test(rent_burdened, listw, zero.policy = T)
xy <- cbind(X, Y)
# Spatial weights matrix based on distance
nb <- dnearneigh(xy, d1=0, d2=10)
rm(xy)
# Spatial weights matrix based on distance
nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
listw <- nb2listw(nb, style = "W")
summary(listw)
# Moran's I test
moran.test(rent_burdened, listw)
View(listw)
View(listw)
View(listw)
rent_burdened
length(rent_burdened)
# Moran's I test
moran.test(rent_burdened, listw)
# Moran's I test
moran.test(y, listw)
# Moran's I test
moran.test(Y, listw)
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
# Lagrangian multiplier test for spatial lag and spatial error dependencies
lm.LMtests(olsreg, listw, test = c('LMlag', 'LMerr'))
View(olsreg)
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_burdened, listw)
moran.plot(rent_burdened, listw)
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
summary(listw)
View(listw)
rm(listw)
listw <- nb2listw(nb, style = "W")
summary(listw)
View(listw)
rm(listw)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_burdened, listw)
# Lagrangian multiplier test for spatial lag and spatial error dependencies
lm.LMtests(olsreg, listw, test = c('LMlag', 'LMerr'))
# Moran's I test (error on this section)
# ===========================================
moran.test(Y, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(data$rent_burdened, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(Census_Tract, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_overburdened, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_b, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_burdened, listw)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
neighbors[[177]] = NULL # removing island with no links from list of neighbors
# Spatial weights matrix based on distance
#nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
nb <- knearneigh(cbind(long,lat), k = 4)
listw <- nb2listw(nb, style = "W")
# Spatial weights matrix based on distance
nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
#nb <- knearneigh(cbind(long,lat), k = 4)
listw <- nb2listw(nb, style = "W")
summary(listw)
# Moran's I test
moran.test(rent_burdened, listw)
View(listw)
View(listw)
View(Y)
View(Y)
# Moran's I test
moran.test(Census_Tract, listw)
# Moran's I test
moran.test(Y, listw)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_burdened, listw)
# Spatial weights matrix based on distance
nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
#nb <- knearneigh(cbind(long,lat), k = 4)
listw <- nb2listw(nb, style = "W")
# Moran's I test
moran.test(Y, listw)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
lat <- matrix(shpfile$INTPTLAT)
View(lat)
View(lat)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
lat <- shpfile$INTPTLAT
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
View(lat)
View(lat)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
lat[[976]] = NULL
View(shpfile)
View(shpfile)
rm(shpfile)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
neighbors[[177]] = NULL # removing island with no links from list of neighbors
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Spatial weights matrix based on distance
nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
#nb <- knearneigh(cbind(long,lat), k = 4)
listw <- nb2listw(nb, style = "W")
# Moran's I test
moran.test(Y, listw)
lat <- matrix(shpfile$INTPTLAT)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
rm(shpfile)
rm(lat)
rm(long)
rm(neighbors)
rm(nb)
rm(listw)
# Creating neighbors through shapefile
shpfile = readShapePoly('MAIN_CT_All/All_Tracts_Without_Island/All_Tracts_Without_Island.shp')
rm(shpfile)
# Creating neighbors through shapefile
shpfile = readShapePoly('All_Tracts_Only_Land_v3/All_Tracts_Only_Land_v3.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_burdened, listw)
moran.plot(rent_burdened, listw)
# Lagrangian multiplier test for spatial lag and spatial error dependencies
lm.LMtests(olsreg, listw, test = c('LMlag', 'LMerr'))
stargazer(moran.test(rent_burdened, listw))
#Spatial Lag Model
spatial.lag <- lagsarlm(rent_burdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals + School_district_quality, data = data, listw)
summary(spatial.lag)
#Spatial Lag Model
spatial.lag <- lagsarlm(rent_burdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
summary(spatial.lag)
stargazer(spatial.lag)
#Spatial Error Model
spatial.error <- errorsarlm(rent_burdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
summary(spatial.error)
stargazer(spatial.error)
#=========================================================
#=========================================================
#=========================================================
#change of variables
## y = rent_overburdened
## change in X = airbnb_all_rentals
Y2 <- cbind(rent_overburdened)
X_old <- cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_unempl, percent_non_white,
percent_foreign_born, log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat2 <- cor(X)
print(mat)
# Redefining X after looking at scatterplot
X = cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_non_white,
log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
spm(X)
# Regression
reg2 <- lm(rent_overburdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy
+ percent_non_white + log_MHI +  percent_airbnb_all_rentals
+ School_district_quality)
stargazer(reg2)
# Variance inflation factor: checking for multicollinearity
vif(reg2)
stargazer(vif(reg2))
# Creating neighbors through shapefile
shpfile = readShapePoly('All_Tracts_Only_Land_v3/All_Tracts_Only_Land_v3.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
# OLS regression
olsreg <- lm(Y ~ X)
stargazer(olsreg)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_overburdened, listw)
moran.plot(rent_overburdened, listw)
#Spatial Lag Model
spatial.lag <- lagsarlm(rent_overburdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
summary(spatial.lag)
stargazer(spatial.lag)
#Spatial Error Model
spatial.error <- errorsarlm(rent_overburdened ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
stargazer(spatial.error)
#=========================================================
#=========================================================
#=========================================================
#change of variables
## y = log_median_rent
## change in X = airbnb_all_rentals
Y3 <- cbind(log_median_rent)
# Redefining X after looking at scatterplot
X = cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_non_white,
log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
spm(X)
# Regression
reg3<- lm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy
+ percent_non_white + log_MHI +  percent_airbnb_all_rentals)
stargazer(reg3)
# Variance inflation factor: checking for multicollinearity
vif(reg3)
stargazer(vif(reg3))
shpfile = readShapePoly('All_Tracts_Only_Land_v3/All_Tracts_Only_Land_v3.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(log_median_rent, listw)
moran.plot(log_median_rent, listw)
spatial.lag <- lagsarlm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
summary(spatial.lag)
stargazer(spatial.lag)
# Spatial weights matrix based on distance
#nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
nb <- knearneigh(cbind(long,lat), k = 5)
listw <- nb2listw(nb, style = "W")
listw <- nb2listw(nb, style = "K5")
listw <- nb2listw(nb, )
# Spatial weights matrix based on distance
#nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
#nb <- knearneigh(cbind(long,lat), k = 5)
#listw <- nb2listw(nb, )
#summary(listw)
knearneigh(coords, k = 10, longlat = NULL, RANN = TRUE)
# Spatial weights matrix based on distance
#nb <- dnearneigh(cbind(long,lat), d1=0, d2=10)
#nb <- knearneigh(cbind(long,lat), k = 5)
#listw <- nb2listw(nb, )
#summary(listw)
knb <- knearneigh(coords, k = 10, longlat = NULL, RANN = TRUE)
plot(data, border = 'grey')
#Spatial Error Model
spatial.error <- errorsarlm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_all_rentals, data = data, listw)
summary(spatial.error)
stargazer(spatial.error)
#=========================================================
#=========================================================
#=========================================================
#change of variables
## y = log_median_rent
## change in X = airbnb_active_rentals
Y3 <- cbind(log_median_rent)
#=========================================================
#=========================================================
#=========================================================
#change of variables
## y = log_median_rent
## change in X = airbnb_active_rentals
Y4 <- cbind(log_median_rent)
X_old <- cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_unempl, percent_non_white,
percent_foreign_born, log_MHI, percent_airbnb_active_rentals, School_district_quality)
# Redefining X after looking at scatterplot
X = cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_non_white,
log_MHI, percent_airbnb_active_rentals, School_district_quality)
spm(X)
mat <- cor(X)
spm(X)
# Regression
reg4<- lm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy
+ percent_non_white + log_MHI +  percent_airbnb_active_rentals)
stargazer(reg4)
# Variance inflation factor: checking for multicollinearity
vif(reg4)
stargazer(vif(reg4))
shpfile = readShapePoly('All_Tracts_Only_Land_v3/All_Tracts_Only_Land_v3.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
# OLS regression
olsreg <- lm(Y ~ X)
stargazer(olsreg)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(log_median_rent, listw)
moran.plot(log_median_rent, listw)
#Spatial Lag Model
spatial.lag <- lagsarlm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_active_rentals, data = data, listw)
summary(spatial.lag)
stargazer(spatial.lag)
#Spatial Error Model
spatial.error <- errorsarlm(log_median_rent ~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy +
percent_non_white + log_MHI + percent_airbnb_active_rentals, data = data, listw)
stargazer(spatial.error)
#=========================================================
#=========================================================
#=========================================================
#change of variables
## y = rent_hourly wage
## change in X = airbnb_all_rentals
Y5 <- cbind(rent_hourly_wage)
X_old <- cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_unempl, percent_non_white,
percent_foreign_born, log_MHI, percent_airbnb_all_rentals, School_district_quality)
# Redefining X after looking at scatterplot
X = cbind(log_BART_dist, log_CBD_dist, coastal_tracts_dummy, percent_non_white,
log_MHI, percent_airbnb_all_rentals, School_district_quality)
mat <- cor(X)
spm(X)
# Regression
reg5<- lm(rent_hourly_wage~ log_BART_dist + log_CBD_dist + coastal_tracts_dummy
+ percent_non_white + log_MHI +  percent_airbnb_all_rentals)
stargazer(reg5)
# Variance inflation factor: checking for multicollinearity
vif(reg5)
stargazer(vif(reg5))
shpfile = readShapePoly('All_Tracts_Only_Land_v3/All_Tracts_Only_Land_v3.shp')
lat <- matrix(shpfile$INTPTLAT)
lat <- mapply(lat, FUN = as.numeric)
lat <- matrix(lat)
long <- matrix(shpfile$INTPTLON)
long <- mapply(long, FUN = as.numeric)
long <- matrix(long)
coords <- cbind(long, lat)
neighbors <- poly2nb(shpfile)
summary(neighbors)
plot(neighbors, coords)
# Spatial analysis based in contiguity
# Spatial weight matrix
listw <- nb2listw(neighbors)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_hourly_wage, listw)
moran.plot(rent_hourly_wage, listw)
# Moran's I test (error on this section)
# ===========================================
moran.test(rent_hourly_wage, listw)
moran.plot(rent_hourly_wage, listw)
moran.plot(rent_hourly_wage, listw)
source('/media/Work/Sukanya/Spatial_Econometrics/R_work_v2/script.R')
